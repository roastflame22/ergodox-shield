/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define HYPER(key) LS(LC(LA(LG(key))))

#define BASE 0
#define NUMB 1
#define SYMB 2
#define MEDI 3

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <250>;
            quick-tap-ms = <200>;
            flavor = "tap-preferred";
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };
        mlt: my_layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MY_LAYER_TAP";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <125>;
            flavor = "tap-preferred";
            global-quick-tap;
            bindings = <&mo>, <&kp>;
        };
        
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
			bindings = <
            &kp GRAVE   &kp N1      &kp   N2    &kp   N3     &kp    N4     &kp N5    &bt BT_CLR           &kp RPAR  &kp N6 &kp N7   &kp N8       &kp N9    &kp  N0  &kp MINUS
            &kp TAB     &kp  Q      &kp   W    &kp    E     &kp     R     &kp  T     &bt BT_SEL 0         &kp RBKT  &kp Y  &kp U    &kp I        &kp  O    &kp  P   &kp LBKT
            &kp CAPS    &kp  A      &kp   S    &kp    D     &kp     F     &kp  G     &bt BT_SEL 1         &kp EQUAL &kp H  &kp J    &kp K        &kp  L    &kp SEMI &kp SQT
            &kp LSHFT   &kp  Z      &kp   X    &kp    C     &kp     V     &kp  B                                    &kp N  &kp M    &kp COMMA    &kp DOT   &kp FSLH &kp RSHFT
            &kp LCTRL   &kp LALT    &kp LGUI   &kp LT       &kp ESC                                                 &kp DELETE &kp LEFT &kp DOWN     &kp UP    &kp RIGHT 
                                                                          &kp PG_UP  &kp PG_DN            &none     &kp RALT
                                                            &kp LCTRL     &kp SPACE  &none                &none     &kp ENTER &kp BSPC
                                                                                     &kp RALT                &none
			>;
        };

        /*
        empty {
			bindings = <
            &none &none &none &none &none &none &none    &none &none &none &none &none &none &none
            &none &none &none &none &none &none &none    &none &none &none &none &none &none &none
            &none &none &none &none &none &none &none    &none &none &none &none &none &none &none
            &none &none &none &none &none &none                &none &none &none &none &none &none
            &none &none &none &none &none                            &none &none &none &none &none
                                          &none &none    &none &none
                                    &none &none &none    &none &none &none
                                                &none    &none
			>;
        };
        */
    };
};